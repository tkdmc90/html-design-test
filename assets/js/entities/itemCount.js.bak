define(["app"], function(BrewOptix) {
    
    BrewOptix.module("Entities", function (Entities, BrewOptix, Backbone, Marionette, $, _) {

        Entities.ItemCount = Backbone.Model.extend({
            urlRoot: BrewOptix.url("ItemCount"),
            defaults: { "CountType": 0,"CountDate": new Date(),"Quantity": 0,"BrandID": "", "PackageTypeOrPackageMaterialID": "","BrandSpecific": true,"DisplayValue":"" },
            idAttribute: "EntityID"
        });

        Entities.ItemCountCollection = Backbone.Collection.extend({
            url: BrewOptix.url("ItemCount"),
            model: Entities.ItemCount,
            comparator: "name"
        });


        var itemCounts;

        var api = {
            getItemCounts: function () {
                var defer = $.Deferred();

                if (itemCounts !== undefined && itemCounts.length > 0) {
                    defer.resolve(itemCounts);
                } else {
                    itemCounts = new Entities.ItemCountCollection();

                    itemCounts.fetch({
                        success: function(data) {
                            defer.resolve(data);
                        }
                    });
                }

                return defer.promise();
            }
        };

        BrewOptix.reqres.setHandler("itemCount:entities", function () { return api.getItemCounts(); });

        BrewOptix.reqres.setHandler("itemCount:entity", function (id) {
            var itemCount = itemCounts.where({ EntityID: id });
            if (itemCount.length > 0) {
                return itemCount[0];
            } else {
                return undefined;
            }
        });

        BrewOptix.on("itemCount:added", function (itemCount) {
            itemCounts.set(itemCount, { remove: false });
            itemCounts.trigger('reset');
        });

    });

    return BrewOptix.Entities.ItemCount;
});

